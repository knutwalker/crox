vec![

Token {  typ:           If  ,  offset:   0  ,  len:  2  },
Token {  typ:    LeftParen  ,  offset:   3  ,  len:  1  },
Token {  typ:   Identifier  ,  offset:   4  ,  len:  9  },
Token {  typ:   RightParen  ,  offset:  13  ,  len:  1  },
Token {  typ:    LeftBrace  ,  offset:  15  ,  len:  1  },
Token {  typ:        Print  ,  offset:  21  ,  len:  5  },
Token {  typ:       String  ,  offset:  28  ,  len:  3  },
Token {  typ:    Semicolon  ,  offset:  32  ,  len:  1  },
Token {  typ:   RightBrace  ,  offset:  34  ,  len:  1  },
Token {  typ:         Else  ,  offset:  36  ,  len:  4  },
Token {  typ:    LeftBrace  ,  offset:  41  ,  len:  1  },
Token {  typ:        Print  ,  offset:  47  ,  len:  5  },
Token {  typ:       String  ,  offset:  54  ,  len:  2  },
Token {  typ:    Semicolon  ,  offset:  57  ,  len:  1  },
Token {  typ:   RightBrace  ,  offset:  59  ,  len:  1  },
Token {  typ:          Var  ,  offset:  63  ,  len:  3  },
Token {  typ:   Identifier  ,  offset:  67  ,  len:  1  },
Token {  typ:        Equal  ,  offset:  69  ,  len:  1  },
Token {  typ:       Number  ,  offset:  71  ,  len:  1  },
Token {  typ:    Semicolon  ,  offset:  72  ,  len:  1  },
Token {  typ:        While  ,  offset:  74  ,  len:  5  },
Token {  typ:    LeftParen  ,  offset:  80  ,  len:  1  },
Token {  typ:   Identifier  ,  offset:  81  ,  len:  1  },
Token {  typ:         Less  ,  offset:  83  ,  len:  1  },
Token {  typ:       Number  ,  offset:  85  ,  len:  2  },
Token {  typ:   RightParen  ,  offset:  87  ,  len:  1  },
Token {  typ:    LeftBrace  ,  offset:  89  ,  len:  1  },
Token {  typ:        Print  ,  offset:  95  ,  len:  5  },
Token {  typ:   Identifier  ,  offset: 101  ,  len:  1  },
Token {  typ:    Semicolon  ,  offset: 102  ,  len:  1  },
Token {  typ:   Identifier  ,  offset: 108  ,  len:  1  },
Token {  typ:        Equal  ,  offset: 110  ,  len:  1  },
Token {  typ:   Identifier  ,  offset: 112  ,  len:  1  },
Token {  typ:         Plus  ,  offset: 114  ,  len:  1  },
Token {  typ:       Number  ,  offset: 116  ,  len:  1  },
Token {  typ:    Semicolon  ,  offset: 117  ,  len:  1  },
Token {  typ:   RightBrace  ,  offset: 119  ,  len:  1  },
Token {  typ:          For  ,  offset: 122  ,  len:  3  },
Token {  typ:    LeftParen  ,  offset: 126  ,  len:  1  },
Token {  typ:          Var  ,  offset: 127  ,  len:  3  },
Token {  typ:   Identifier  ,  offset: 131  ,  len:  1  },
Token {  typ:        Equal  ,  offset: 133  ,  len:  1  },
Token {  typ:       Number  ,  offset: 135  ,  len:  1  },
Token {  typ:    Semicolon  ,  offset: 136  ,  len:  1  },
Token {  typ:   Identifier  ,  offset: 138  ,  len:  1  },
Token {  typ:         Less  ,  offset: 140  ,  len:  1  },
Token {  typ:       Number  ,  offset: 142  ,  len:  2  },
Token {  typ:    Semicolon  ,  offset: 144  ,  len:  1  },
Token {  typ:   Identifier  ,  offset: 146  ,  len:  1  },
Token {  typ:        Equal  ,  offset: 148  ,  len:  1  },
Token {  typ:   Identifier  ,  offset: 150  ,  len:  1  },
Token {  typ:         Plus  ,  offset: 152  ,  len:  1  },
Token {  typ:       Number  ,  offset: 154  ,  len:  1  },
Token {  typ:   RightParen  ,  offset: 155  ,  len:  1  },
Token {  typ:    LeftBrace  ,  offset: 157  ,  len:  1  },
Token {  typ:        Print  ,  offset: 163  ,  len:  5  },
Token {  typ:   Identifier  ,  offset: 169  ,  len:  1  },
Token {  typ:    Semicolon  ,  offset: 170  ,  len:  1  },
Token {  typ:   RightBrace  ,  offset: 172  ,  len:  1  },

]
